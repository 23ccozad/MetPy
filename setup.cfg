[metadata]
name = MetPy
description = Collection of tools for reading, visualizing and performing calculations with weather data.
long_description = file: README.rst
author = Ryan May, Patrick Marsh, Sean Arms, Eric Bruning, John Leeman, Zach Bruick
author_email = support-python@unidata.ucar.edu
maintainer = MetPy Developers
maintainer_email = support-python@unidata.ucar.edu
license = BSD 3-Clause
license-file = LICENSE
platform = any
keywords = meteorology, weather
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Atmospheric Science
    Intended Audience :: Science/Research
    Operating System :: OS Independent
    License :: OSI Approved :: BSD License
url = https://github.com/Unidata/MetPy
project_urls =
    Documentation = https://unidata.github.io/MetPy/
    Release Notes = https://github.com/Unidata/MetPy/releases
    Bug Tracker = https://github.com/Unidata/MetPy/issues
    Source Code = https://github.com/Unidata/MetPy

[options]
zip_safe = True
packages = find:
include_package_data = True
setup_requires = setuptools_scm
python_requires = >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*
install_requires =
    matplotlib>=2.0.0
    numpy>=1.12.0
    scipy>=0.17.0
    pint
    xarray>=0.10.7
    pooch>=0.1
    traitlets>=4.3.0
    pandas>=0.22.0
    enum34;python_version<"3.4"
    contextlib2;python_version<"3.6"

[options.packages.find]
exclude = doc, examples

[options.extras_require]
dev = ipython[all]>=3.1
doc = sphinx>=1.8; sphinx-gallery>=0.4; doc8; m2r; netCDF4
examples = cartopy>=0.13.1; matplotlib>=2.2.0; pyproj>=1.9.4,!=2.0.0
test = pytest>=2.4; pytest-runner; pytest-mpl; pytest-flake8; cartopy>=0.16.0; flake8>3.2.0; flake8-builtins!=1.4.0; flake8-comprehensions; flake8-copyright; flake8-docstrings; flake8-import-order; flake8-mutable; flake8-pep3101; flake8-print; flake8-quotes; flake8-rst-docstrings; pep8-naming; netCDF4; pyproj>=1.9.4,!=2.0.0

[bdist_wheel]
# This flag says that the code is written to work on both Python 2 and 3.
universal=1

[build_sphinx]
source-dir = docs/source
build-dir = docs/build
all-files = True

[aliases]
test = pytest

[pycodestyle]
ignore = W503
max-line-length = 95

[flake8]
ignore = F405 D999 W503 RST306 RST902
select = A B C D E F H I M Q RST S T W B902
max-line-length = 95
application-import-names = metpy
import-order-style = google
copyright-check = True
copyright-author = MetPy Developers
inline-quotes = single
multiline-quotes = double
rst-roles = class, data, func, meth, mod
rst-directives = plot
docstring-convention = numpy

[tool:pytest]
# https://github.com/matplotlib/pytest-mpl/issues/69
markers = mpl_image_compare
norecursedirs = build docs .idea
flake8-ignore = *.py F405 W503 RST902
                examples/*.py D T003 T001
                tutorials/*.py D T003 T001
                deprecation.py C801
                metpy/calc/__init__.py D999
                metpy/calc/*.py RST306
                metpy/interpolate/__init__.py D999
                metpy/interpolate/*.py RST306
                metpy/io/__init__.py D999
                metpy/plots/__init__.py D999
flake8-max-line-length = 95
doctest_optionflags = NORMALIZE_WHITESPACE
mpl-results-path = test_output
log_print = False

[coverage:run]
omit = metpy/_version.py,metpy/io/_nexrad_msgs/parse_spec.py

[doc8]
ignore-path = docs/build,docs/api/generated,docs/_templates,docs/tutorials,docs/examples
file-encoding = utf8
max-line-length = 95

[pydocstyle]
match = (?!(test_|setup)).*\.py
match-dir = (?!(build|docs|examples|tutorials|_nexrad_msgs))[^.].*
convention = numpy
