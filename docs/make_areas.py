# Copyright (c) 2023 MetPy Developers.
# Distributed under the terms of the BSD 3-Clause License.
# SPDX-License-Identifier: BSD-3-Clause
"""A script makes all of the areas available within the declarative syntax."""

from pathlib import Path
import textwrap

from metpy.plots.plot_areas import areas

states_provinces = ['ak', 'al', 'ar', 'ca', 'co', 'ct', 'dc', 'de', 'fl', 'ga', 'hi',
                    'ia', 'id', 'il', 'in', 'ks', 'ky', 'la', 'ma', 'md', 'me', 'mi',
                    'mn', 'mo', 'ms', 'mt', 'nc', 'nd', 'ne', 'nh', 'nj', 'nm', 'nv',
                    'ny', 'oh', 'ok', 'or', 'pa', 'ri', 'sc', 'sd', 'tn', 'tx', 'ut',
                    'va', 'vt', 'wi', 'wv', 'wy', 'az', 'wa', 'cn', 'cnlcc', 'ab', 'bc',
                    'mb', 'nb', 'nf', 'ns', 'nt', 'nu', 'on', 'pe', 'qb', 'sa', 'yt', 'us',
                    'uslcc', 'awips', 'whlf', 'chlf', 'centus', 'ehlf', 'mehlf', 'bosfa',
                    'miafa', 'chifa', 'dfwfa', 'slcfa', 'sfofa', 'west', 'cent', 'east',
                    'nwus', 'swus', 'ncus', 'scus', 'neus', 'seus']


fname = Path().cwd().resolve().parent / 'docs' / 'api' / 'areas.rst'
with open(fname, 'w') as table:
    header = """
        .. (comment): DO NOT EDIT this file.
        .. It is auto-generated by running : metpy/docs/api/make_areas.py
        .. Please adjust by making changes there.
        .. It is included in the repository only to aid detection of changes.
        .. _metpy_areas:

        MetPy Area List
        ===============


        """

    table.write(textwrap.dedent(header))

    for area in areas.index:
        extent = areas.loc[area].bounds
        longname = areas.loc[area]['name']

        area_header = area + '  -  ' + longname + '\n'
        table.write(area_header)
        table.write('-' * len(area_header) + '\n\n')

        if area in states_provinces:
            code = textwrap.dedent(f"""
            .. plot::

                import matplotlib.pyplot as plt
                import cartopy.crs as ccrs
                import cartopy.feature as cfeature
                from metpy.plots.plot_areas import areas

                proj = areas.loc['{area}'].proj

                plt.figure(figsize=(8, 10))
                ax = plt.subplot(111, projection=proj)
                ax.set_extent({extent}, ccrs.PlateCarree())
                ax.add_feature(cfeature.STATES.with_scale('10m'), edgecolor='grey',
                            linewidth=0.75)
                ax.add_feature(cfeature.COASTLINE.with_scale('10m'), linewidth=1.1)
                ax.add_feature(cfeature.BORDERS.with_scale('10m'), edgecolor='black')
                ax.set_title(f'area={area}          name={areas.loc[area]["name"]}')


            """)

        else:
            code = textwrap.dedent(f"""
            .. plot::

                import matplotlib.pyplot as plt
                import cartopy.crs as ccrs
                import cartopy.feature as cfeature
                from metpy.plots.plot_areas import areas

                proj = areas.loc['{area}'].proj

                plt.figure(figsize=(8, 10))
                ax = plt.subplot(111, projection=proj)
                ax.set_extent({extent}, ccrs.PlateCarree())
                ax.add_feature(cfeature.COASTLINE.with_scale('10m'), linewidth=1.1)
                ax.add_feature(cfeature.BORDERS.with_scale('10m'), edgecolor='black')
                ax.set_title(f'area={area}          name={areas.loc[area]["name"]}')


            """)
        table.write(code)
