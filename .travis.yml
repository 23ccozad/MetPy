# After changing this file, check it on:
#   http://lint.travis-ci.org/
language: python

sudo: false

addons:
  apt:
    packages:
    - libblas3gf
    - liblapack3gf

env:
  global:
    - REQUIRES=requirements.txt

matrix:
  include:
    - python: 2.7
    - python: 2.7
      env: REQUIRES=min-requirements.txt
    - python: 2.7
      env: LINT=true
    # Docs built on 2.7 because that's what readthedocs uses
    - python: 2.7
      env: DOCBUILD=true
    - python: 2.7
      env: EXAMPLES=true
    - python: 3.2
    - python: 3.3
    - python: 3.4
      env: NOSE_WITH_COVERAGE=y NOSE_COVER_PACKAGE=metpy
    - python: 3.4
      env: LINT=true
    - python: 3.4
      env: EXAMPLES=true
    #- python: nightly
  allow_failures:
    - python: nightly

before_install:
  - virtualenv --python=python venv
  - source venv/bin/activate
  - if [[ $LINT == true ]]; then
      pip install flake8 pep8-naming;
    else
      if [[ $DOCBUILD == true || $EXAMPLES == true ]]; then
        pip install -r docs/requirements.txt;
      else
        pip install nose;
      fi;
      wget https://github.com/MetPy/travis-wheels/archive/${TRAVIS_PYTHON_VERSION}.zip -O wheels.zip && unzip wheels.zip;
      if [[ $TRAVIS_PYTHON_VERSION == "nightly" ]]; then
        cd travis-wheels-${TRAVIS_PYTHON_VERSION}/wheel-0.24.0 && python setup.py install && cd ../..;
      fi;
      pip install -f "file://$PWD/travis-wheels-${TRAVIS_PYTHON_VERSION}/wheelhouse/" -r $REQUIRES;
      python -c "import numpy; print(numpy.__version__)";
    fi

install:
  - if [[ $LINT != true ]]; then
      python setup.py install;
    fi
  - if [[ $EXAMPLES == true ]]; then
      python setup.py examples;
    fi

script:
  - if [[ $LINT == true ]]; then
      flake8 metpy;
    elif [[ $DOCBUILD == true ]]; then
      cd docs;
      make html;
    elif [[ $EXAMPLES == true ]]; then
      cd examples;
      python test_examples.py;
    else
      nosetests;
    fi

after_success:
  - if [[ $NOSE_WITH_COVERAGE == y ]]; then
      pip install coveralls;
      coveralls;
    fi
